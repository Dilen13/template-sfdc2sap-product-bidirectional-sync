<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:sap="http://www.mulesoft.org/schema/mule/sap" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:siebel="http://www.mulesoft.org/schema/mule/siebel" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/siebel http://www.mulesoft.org/schema/mule/siebel/current/mule-siebel.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/sap http://www.mulesoft.org/schema/mule/sap/current/mule-sap.xsd">
    <data-mapper:config name="salesforce_to_siebel" transformationGraphPath="map_salesforce_product_to_siebel.grf" doc:name="DataMapper"/>
    
    <sfdc:config name="Test_Salesforce" username="${test.sfdc.username}" password="${test.sfdc.password}" securityToken="${test.sfdc.securityToken}" url="${test.sfdc.url}" doc:name="Test Salesforce">
        <sfdc:connection-pooling-profile initialisationPolicy="INITIALISE_ONE" exhaustedAction="WHEN_EXHAUSTED_GROW"/>
    </sfdc:config>
    
	<sap:connector name="Test_SAP" jcoAsHost="${test.sap.jco.ashost}"
		jcoUser="${test.sap.jco.user}" jcoPasswd="${test.sap.jco.passwd}" jcoSysnr="${test.sap.jco.sysnr}"
		jcoClient="${test.sap.jco.client}" jcoLang="${test.sap.jco.lang}"
		validateConnections="true"
		doc:name="Test SAP" />
    
    <flow name="createProductsInSalesforceFlow" doc:name="createProductsInSalesforceFlow">
        <sfdc:create config-ref="Test_Salesforce" type="Product2" doc:name="Create Product in Salesforce">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:create>
        <logger level="INFO" message="Create Products in Salesforce result: #[payload]" doc:name="Logger"/>
    </flow>
    <flow name="createProductsInSapFlow" doc:name="createProductsInSapFlow">
        <collection-splitter doc:name="Collection Splitter"/>
        <processor-chain doc:name="Processor Chain">
            <expression-component doc:name="Prepare for Creation"><![CDATA[payload['MessageFunction'] = '009';
payload['MaterialNumber'] = payload['ProductCode'];]]></expression-component>
            <data-mapper:transform config-ref="Salesforce_Product_to_MATMAS01" doc:name="Salesforce Product to MATMAS01"/>
            <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="Test_SAP" type="idoc" functionName="MATMAS01" xmlVersion="2" outputXml="true" evaluateFunctionResponse="true" responseTimeout="10000" doc:name="Send IDoc to SAP"/>
        </processor-chain>
        <collection-aggregator failOnTimeout="true" doc:name="Collection Aggregator"/>
        <logger level="INFO" message="Create Products in Sap result: #[payload]" doc:name="Logger"/>
    </flow>
    <flow name="queryProductFromSalesforceFlow" doc:name="queryProductFromSalesforceFlow">
        <sfdc:query-single config-ref="Test_Salesforce" query="SELECT Id, Name, ProductCode FROM Product2 WHERE ProductCode = '#[payload['ProductCode']]'" doc:name="Salesforce"/>
        <logger level="INFO" message="Retrieve Products from Salesforce result: #[payload]" doc:name="Logger"/>
    </flow>
    <flow name="queryProductFromSapFlow" doc:name="queryProductFromSapFlow">
        <enricher source="#[payload.isEmpty() ? NullPayload.getInstance() : payload[0]]" target="#[payload]" doc:name="Store result in record var 'materialInSap'">
            <processor-chain doc:name="Processor Chain">
                <logger message="#[payload['ProductCode']]" level="INFO" category="KUCAPACA" doc:name="Logger"/>
                <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="Test_SAP" type="function" functionName="ZMULE_MATERIAL_GETLIST" xmlVersion="2" outputXml="true" responseTimeout="10000" doc:name="Query Material from SAP">
                    <sap:definition><![CDATA[<jco>
  	<import>
  		<field name="I_MAT_ID">#[payload['ProductCode']]</field>
	</import>
</jco>
]]></sap:definition>
                </sap:outbound-endpoint>
                <logger message="#[payload]" level="INFO" category="KAKAO" doc:name="Logger"/>
                <data-mapper:transform config-ref="ZMULE_MATERIAL_GETLIST_to_Salesforce_Materials" doc:name="ZMULE_MATERIAL_GETLIST to Salesforce Materials"/>
                <logger message="#[payload]" level="INFO" category="DODO" doc:name="Logger"/>
            </processor-chain>
        </enricher>
        <logger level="INFO" message="Retrieve Products from SAP result: #[payload]" doc:name="Logger"/>
    </flow>
    <flow name="deleteProductsFromSapFlow" doc:name="deleteProductsFromSapFlow">
        <foreach doc:name="For Each">
            <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="Test_SAP" type="function" xmlVersion="2" outputXml="true" responseTimeout="10000" doc:name="SAP" functionName="BAPI_MATERIAL_SAVEDATA">
                <sap:definition><![CDATA[<jco>
  	<import>
	  	<structure name="HEADDATA">
	  		<field name="MATERIAL">#[payload]</field>
	  		<field name="BASIC_VIEW">X</field>
	  	</structure>
	  	<structure name="CLIENTDATA">
	  		<field name="DEL_FLAG">X</field>
	  	</structure>
	  	<structure name="CLIENTDATAX">
	  		<field name="DEL_FLAG">X</field>
	  	</structure>
	</import>
</jco>
]]></sap:definition>
            </sap:outbound-endpoint>
        </foreach>
    </flow>
    <flow name="deleteProductsFromSalesforceFlow" doc:name="deleteProductsFromSalesforceFlow">
        <sfdc:delete config-ref="Test_Salesforce" doc:name="Salesforce"/>
        <logger message="Remove Products from Salesforce result: #[payload]" level="INFO" doc:name="Logger"/>
    </flow>

</mule>